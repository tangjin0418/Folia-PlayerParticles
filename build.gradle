import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'io.github.goooler.shadow' version '8.1.8'
    id 'maven-publish'
    id 'java-library'
}

targetCompatibility = 1.8
sourceCompatibility = 1.8
group = 'dev.esophose'
version = '8.8'

java {
    disableAutoTargetJvm() // Allows depending on Paper's newer APIs even though they use Java 17

    withJavadocJar()
    withSourcesJar()


}

compileJava {
    options.compilerArgs += ['-parameters']
    options.fork = true
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()

    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://repo.codemc.org/repository/maven-public' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
    maven { url = 'https://repo.rosewooddev.io/repository/public/' }

    mavenLocal()
}

dependencies {
    compileOnly 'dev.folia:folia-api:1.21.4-R0.1-SNAPSHOT'
    compileOnly 'org.jetbrains:annotations:23.0.0'
    compileOnly 'me.clip:placeholderapi:2.11.6'
    api 'org.bstats:bstats-bukkit-lite:1.7'
    api 'org.codemc.worldguardwrapper:worldguardwrapper:1.2.1-SNAPSHOT'
    api 'dev.rosewood:rosegarden:1.3.0.36-DEV-SNAPSHOT'
    implementation 'org.tjdev.util.tjpluginutil:spigot:1.0-SNAPSHOT'
}

shadowJar {
    archiveClassifier.set(null)
    minimize()

    relocate('org.tjdev.util', 'org.tjdev.modified.playerparticles.lib')
    relocate('org.bstats', 'dev.esophose.playerparticles.libs.bstats')
    relocate('dev.rosewood.rosegarden', 'dev.esophose.playerparticles.libs.rosegarden')
    relocate('org.codemc.worldguardwrapper', 'dev.esophose.playerparticles.libs.worldguardwrapper')
}

processResources {
    from (sourceSets.main.resources.srcDirs) {
        include '**/*.yml'
        filter ReplaceTokens, tokens: ["version": project.property("version")]
        duplicatesStrategy DuplicatesStrategy.INCLUDE
    }
}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            artifactId = 'playerparticles'
            pom {
                name = 'playerparticles'
            }
        }
    }
    repositories {
        if (project.hasProperty('mavenUser') && project.hasProperty('mavenPassword')) {
            maven {
                credentials {
                    username project.mavenUser
                    password project.mavenPassword
                }

                def releasesRepoUrl = 'https://repo.rosewooddev.io/repository/public-releases/'
                def snapshotsRepoUrl = 'https://repo.rosewooddev.io/repository/public-snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }
}

javadoc {
    options.encoding = 'UTF-8'
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

build.dependsOn shadowJar
//publishShadowPublicationToMavenRepository.dependsOn jar
